definitions:
  model.AuthRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.ChargeCategory:
    properties:
      code:
        type: string
      description:
        type: string
    type: object
  model.ContactNumber:
    properties:
      email:
        type: string
      home:
        type: string
    type: object
  model.CountryData:
    properties:
      countryCode:
        type: string
      countryName:
        type: string
      telCode:
        type: string
    type: object
  model.Document:
    properties:
      code:
        type: string
      description:
        type: string
      expireDate:
        type: string
      value:
        type: string
    type: object
  model.HomeAddress:
    properties:
      address1:
        type: string
      address2:
        type: string
      address3:
        type: string
      cityState:
        type: string
      country:
        type: string
      postalCode:
        type: string
    type: object
  model.Name:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      middleName:
        type: string
      title:
        type: string
    type: object
  model.Nationality:
    properties:
      code:
        type: string
      description:
        type: string
    type: object
  model.Patient:
    properties:
      chargeCategory:
        $ref: '#/definitions/model.ChargeCategory'
      contactNumber:
        $ref: '#/definitions/model.ContactNumber'
      dob:
        type: string
      documents:
        items:
          $ref: '#/definitions/model.Document'
        type: array
      homeAddress:
        $ref: '#/definitions/model.HomeAddress'
      name:
        $ref: '#/definitions/model.Name'
      nationality:
        $ref: '#/definitions/model.Nationality'
      paymentClass:
        $ref: '#/definitions/model.PaymentClass'
      prn:
        type: string
      resident:
        type: string
      sex:
        $ref: '#/definitions/model.Sex'
    type: object
  model.PaymentClass:
    properties:
      code:
        type: string
      description:
        type: string
    type: object
  model.Sex:
    properties:
      code:
        type: string
      description:
        type: string
    type: object
  model.Todo:
    properties:
      text:
        maxLength: 20
        minLength: 5
        type: string
      title:
        maxLength: 20
        minLength: 5
        type: string
    required:
    - text
    - title
    type: object
info:
  contact: {}
  description: This is a sample server Petstore server.
  title: Swagger App API
  version: "1.0"
paths:
  /app/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: AuthRequest payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - Auth
  /app/auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: AuthRequest payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - Auth
  /app/common/country/list:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.CountryData'
            type: array
      tags:
      - Common
  /app/common/patient:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Patient'
      tags:
      - Common
  /app/invoice/data:
    get:
      produces:
      - text/xml
      responses:
        "200":
          description: OK
      tags:
      - Invoice
  /app/invoice/index:
    get:
      produces:
      - text/xml
      responses:
        "200":
          description: OK
      tags:
      - Invoice
  /app/todo:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: integer
            type: array
      security:
      - BearerAuth: []
      tags:
      - Todos
    post:
      consumes:
      - application/json
      parameters:
      - description: Todo payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      tags:
      - Todos
  /app/todo/{todoId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: todoId
        in: path
        name: todoId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      tags:
      - Todos
    get:
      parameters:
      - description: todoId
        in: path
        name: todoId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      tags:
      - Todos
    put:
      consumes:
      - application/json
      parameters:
      - description: todoId
        in: path
        name: todoId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      tags:
      - Todos
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
