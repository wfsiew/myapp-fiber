// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/app/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "description": "AuthRequest payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/app/auth/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "description": "AuthRequest payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/app/common/country/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CountryData"
                            }
                        }
                    }
                }
            }
        },
        "/app/common/patient": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Patient"
                        }
                    }
                }
            }
        },
        "/app/invoice/data": {
            "get": {
                "produces": [
                    "text/xml"
                ],
                "tags": [
                    "Invoice"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/app/invoice/index": {
            "get": {
                "produces": [
                    "text/xml"
                ],
                "tags": [
                    "Invoice"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/app/todo": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todos"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todos"
                ],
                "parameters": [
                    {
                        "description": "Todo payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Todo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/app/todo/{todoId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todos"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "todoId",
                        "name": "todoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todos"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "todoId",
                        "name": "todoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todos"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "todoId",
                        "name": "todoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AuthRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.ChargeCategory": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "model.ContactNumber": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "home": {
                    "type": "string"
                }
            }
        },
        "model.CountryData": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "type": "string"
                },
                "countryName": {
                    "type": "string"
                },
                "telCode": {
                    "type": "string"
                }
            }
        },
        "model.Document": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expireDate": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.HomeAddress": {
            "type": "object",
            "properties": {
                "address1": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "address3": {
                    "type": "string"
                },
                "cityState": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                }
            }
        },
        "model.Name": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "middleName": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.Nationality": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "model.Patient": {
            "type": "object",
            "properties": {
                "chargeCategory": {
                    "$ref": "#/definitions/model.ChargeCategory"
                },
                "contactNumber": {
                    "$ref": "#/definitions/model.ContactNumber"
                },
                "dob": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Document"
                    }
                },
                "homeAddress": {
                    "$ref": "#/definitions/model.HomeAddress"
                },
                "name": {
                    "$ref": "#/definitions/model.Name"
                },
                "nationality": {
                    "$ref": "#/definitions/model.Nationality"
                },
                "paymentClass": {
                    "$ref": "#/definitions/model.PaymentClass"
                },
                "prn": {
                    "type": "string"
                },
                "resident": {
                    "type": "string"
                },
                "sex": {
                    "$ref": "#/definitions/model.Sex"
                }
            }
        },
        "model.PaymentClass": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "model.Sex": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "model.Todo": {
            "type": "object",
            "required": [
                "text",
                "title"
            ],
            "properties": {
                "text": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 5
                },
                "title": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 5
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger App API",
	Description:      "This is a sample server Petstore server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
